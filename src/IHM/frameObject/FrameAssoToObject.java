/**
 * Frame to chose an object to associate
 */
package IHM.frameObject;

import java.awt.Toolkit;
import javax.swing.JOptionPane;
import myObject.*;

/**
 *
 * @author Mary
 */
public class FrameAssoToObject extends javax.swing.JFrame {

    private MetaModelObject object;
    
    
    /**
     * Creates new form FrameAssoToSegment
     */
    public FrameAssoToObject() {
        this.setLocationRelativeTo(null);
        this.setResizable(false);
       
    }
    
    /**
     * Creates new form FrameAssoToSegment
     * @param object object selected to associate
     */
    public FrameAssoToObject(MetaModelObject object) {
        this.object = object;
        initComponents();
        setIcon();
        if(object instanceof Segment){
            initComboBoxListToSegment();
        }else if(object instanceof myObject.Process){
            initComboBoxListToProcess();
        }
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBoxListProcess = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Choisisser le l'objet à associer");

        jComboBoxListProcess.setModel(new javax.swing.DefaultComboBoxModel());
        jComboBoxListProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxListProcessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxListProcess, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxListProcess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Select the good fonction
     * @param evt 
     */
    private void jComboBoxListProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxListProcessActionPerformed
        // TODO add your handling code here:
        if(object instanceof Segment){
            excuteComboboxListToSegment();
        }else if(object instanceof myObject.Process){
            excuteComboboxListToProcess();
        }
        this.dispose();
    }//GEN-LAST:event_jComboBoxListProcessActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameAssoToObject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameAssoToObject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameAssoToObject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameAssoToObject.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameAssoToObject().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBoxListProcess;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    /**
     * Load combobox if the object is a segment
     */
    private void initComboBoxListToSegment() {
        jComboBoxListProcess.setModel(new javax.swing.DefaultComboBoxModel(data.IHM.DataIHM.getFreeProcess()));
    }
    
    /**
     * Load combobox if the object is a process
     */
    private void initComboBoxListToProcess() {
        jComboBoxListProcess.setModel(new javax.swing.DefaultComboBoxModel(data.IHM.DataIHM.getFreeCapability()));
    }
    
    /**
     * Link the process to segment
     */
    private void excuteComboboxListToSegment(){
        int dialogResult = JOptionPane.showConfirmDialog (null, "Voulez vous vraiment associer " + jComboBoxListProcess.getSelectedItem() + 
                    " à votre zone " + object.getName() + " ?");
        if(dialogResult == JOptionPane.YES_OPTION){
            data.database.CrudDatabase.updateAssoProcessToSegment((Segment) object, (myObject.Process) jComboBoxListProcess.getSelectedItem());
            JOptionPane.showMessageDialog(null, "Association créée");
        }
    }
    
    /**
     * Link the capability to process
     */
    private void excuteComboboxListToProcess(){
        int dialogResult = JOptionPane.showConfirmDialog (null, "Voulez vous vraiment associer " + jComboBoxListProcess.getSelectedItem() + 
                    " à votre quartier " + object.getName() + " ?");
        if(dialogResult == JOptionPane.YES_OPTION){
            data.database.CrudDatabase.updateAssoCapabilityToProcess((myObject.Process) object, (Capability) jComboBoxListProcess.getSelectedItem());
            JOptionPane.showMessageDialog(null, "Association créée");
        }
    }

   private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getClassLoader().getResource("usi.png")));
    }
}
