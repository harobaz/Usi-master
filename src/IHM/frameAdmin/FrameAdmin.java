/**
 * Admin frame, only admin account can acces. You can create, edit or delete user
 */
package IHM.frameAdmin;

import myObject.User;
import genmdp.MotDePasse;
import java.awt.Toolkit;
import javax.swing.*;

/**
 *
 * @author Mary
 */
public class FrameAdmin extends javax.swing.JFrame {

    private JFrame motherFrame;
    /**
     * Creates new form FrameAdmin
     */
    public FrameAdmin(JFrame motherFrame) {
        this.motherFrame = motherFrame;
        motherFrame.setEnabled(false);
        initComponents();
        this.setTitle("Administration utilisateur");
        setIcon();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setResizable(false);
    }

    private FrameAdmin() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelListUser = new javax.swing.JLabel();
        jLabelLogin = new javax.swing.JLabel();
        jComboBoxListUser = new javax.swing.JComboBox();
        jTextFieldLogin = new javax.swing.JTextField();
        jButtonChangePwd = new javax.swing.JButton();
        jCheckBoxAdmin = new javax.swing.JCheckBox();
        jButtonSave = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonCreate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabelListUser.setText("Liste utilisateur :");

        jLabelLogin.setText("Login :");

        jComboBoxListUser.setModel(new javax.swing.DefaultComboBoxModel(data.IHM.DataIHM.loadUser()));
        jComboBoxListUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxListUserActionPerformed(evt);
            }
        });

        jButtonChangePwd.setText("Changer mdp");
        jButtonChangePwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangePwdActionPerformed(evt);
            }
        });

        jCheckBoxAdmin.setText("Administrateur");
        jCheckBoxAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAdminActionPerformed(evt);
            }
        });

        jButtonSave.setText("Sauvgarder");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Supprimer");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonCreate.setText("Créer");
        jButtonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBoxListUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(177, 177, 177)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxAdmin)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButtonChangePwd, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelListUser)
                                .addGap(126, 126, 126)
                                .addComponent(jLabelLogin)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelListUser)
                    .addComponent(jLabelLogin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxListUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonChangePwd)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonCreate))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAdminActionPerformed
        // TODO add your handling code here:
        //A supprimer
    }//GEN-LAST:event_jCheckBoxAdminActionPerformed

    private void jComboBoxListUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxListUserActionPerformed
        if(jComboBoxListUser.getSelectedItem() != null){
            User currentUser = (User) jComboBoxListUser.getSelectedItem();
            jTextFieldLogin.setText(currentUser.getLogin());
            jCheckBoxAdmin.setSelected(currentUser.getAdministrator());
        }
        else{
            JOptionPane.showMessageDialog(null,"Action impossible.\n Aucun utilisateur sélectionné");
        }
    }//GEN-LAST:event_jComboBoxListUserActionPerformed
    
    /**
     * To save change in user
     * @param evt 
     */
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        if(jComboBoxListUser.getSelectedItem() != null){
            User currentUser = (User) jComboBoxListUser.getSelectedItem();
            currentUser.setLogin(jTextFieldLogin.getText());
            currentUser.setRole(jCheckBoxAdmin.isSelected());
            currentUser.updateUser();
            JOptionPane.showMessageDialog(null,"Utilisateur " + currentUser.getLogin() + " modifié");
            
        }
        else{
            JOptionPane.showMessageDialog(null,"Action impossible.\n Aucun utilisateur sélectionné");
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    /**
     * To delete a user
     * @param evt 
     */
    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed

         if(jComboBoxListUser.getSelectedItem() != null){
            User currentUser = (User) jComboBoxListUser.getSelectedItem();
            int dialogResult = JOptionPane.showConfirmDialog (null, "Voulez vous vraiment supprimer l'utilisateur " + currentUser.getLogin() + " ?");
            if(dialogResult == JOptionPane.YES_OPTION){
                currentUser.deleteUser();
                jComboBoxListUser.removeItem(currentUser);
                jComboBoxListUser.remove(jComboBoxListUser.getSelectedIndex());
                JOptionPane.showMessageDialog(null,"Utilisateur " + currentUser.getLogin() + " supprimé");
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Action impossible.\n Aucun utilisateur sélectionné");
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    /**
     * To create a new user, call a new frame
     * @param evt 
     */
    private void jButtonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateActionPerformed
        // TODO add your handling code here:
        FrameCreateUser win = new FrameCreateUser(this);
        win.setVisible(true);
        win.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jButtonCreateActionPerformed

    /**
     * To generate a new password
     * @param evt 
     */
    private void jButtonChangePwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangePwdActionPerformed
        if(jComboBoxListUser.getSelectedItem() != null){
            MotDePasse mdp = new MotDePasse(true, true, true);
            User currentUser = (User) jComboBoxListUser.getSelectedItem();
            String visible = mdp.generationMdp();
            currentUser.setPassword(visible);
            currentUser.updateUser();
            JOptionPane.showMessageDialog(null,"Nouveau mot de passe pour l'utilisateur " + currentUser.getLogin() + " : " + visible);
        }
        else{
            JOptionPane.showMessageDialog(null,"Action impossible.\n Aucun utilisateur sélectionné");
        }
    }//GEN-LAST:event_jButtonChangePwdActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:

        this.requestFocus();
        jComboBoxListUser.setModel(new javax.swing.DefaultComboBoxModel(data.IHM.DataIHM.loadUser()));
        if(jComboBoxListUser.getSelectedItem() != null){
            User currentUser = (User) jComboBoxListUser.getSelectedItem();
            jTextFieldLogin.setText(currentUser.getLogin());
            jCheckBoxAdmin.setSelected(currentUser.getAdministrator());
        }
        else{
            JOptionPane.showMessageDialog(null,"Action impossible.\n Aucun utilisateur sélectionné");
        }        
    }//GEN-LAST:event_formWindowActivated

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        motherFrame.setEnabled(true);
    }//GEN-LAST:event_formWindowClosed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
       
    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameAdmin().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonChangePwd;
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JCheckBox jCheckBoxAdmin;
    private javax.swing.JComboBox jComboBoxListUser;
    private javax.swing.JLabel jLabelListUser;
    private javax.swing.JLabel jLabelLogin;
    private javax.swing.JTextField jTextFieldLogin;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getClassLoader().getResource("usi.png")));
    }
}
